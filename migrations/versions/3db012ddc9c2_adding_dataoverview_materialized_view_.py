"""adding DataOverview materialized view to models

Revision ID: 3db012ddc9c2
Revises: 4a1648c37bf8
Create Date: 2023-03-06 13:10:32.670868

"""
from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_materialized_view import PGMaterializedView
from sqlalchemy import text as sql_text

# revision identifiers, used by Alembic.
revision = '3db012ddc9c2'
down_revision = '4a1648c37bf8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_data_overview = PGMaterializedView(
                schema="public",
                signature="data_overview",
                definition="SELECT date_trunc('day', raffles.dt_start) AS date_trunc_1, count(distinct(raffles.account)) AS raffle_count \nFROM raffles GROUP BY date_trunc('day', raffles.dt_start)",
                with_data=True
            )

    op.create_entity(public_data_overview)

    public_first_view = PGMaterializedView(
                schema="public",
                signature="first_view",
                definition="SELECT date_trunc('day'::text, raffles.dt_start) AS date_trunc_1,\n    count(DISTINCT raffles.account) AS raffle_count\n   FROM raffles\n  GROUP BY (date_trunc('day'::text, raffles.dt_start))",
                with_data=True
            )

    op.drop_entity(public_first_view)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_first_view = PGMaterializedView(
                schema="public",
                signature="first_view",
                definition="SELECT date_trunc('day'::text, raffles.dt_start) AS date_trunc_1,\n    count(DISTINCT raffles.account) AS raffle_count\n   FROM raffles\n  GROUP BY (date_trunc('day'::text, raffles.dt_start))",
                with_data=True
            )

    op.create_entity(public_first_view)

    public_data_overview = PGMaterializedView(
                schema="public",
                signature="data_overview",
                definition="SELECT date_trunc('day', raffles.dt_start) AS date_trunc_1, count(distinct(raffles.account)) AS raffle_count \nFROM raffles GROUP BY date_trunc('day', raffles.dt_start)",
                with_data=True
            )

    op.drop_entity(public_data_overview)

    # ### end Alembic commands ###
